#include <LiquidCrystal_I2C.h>
#include <SPI.h>
#include <MFRC522.h>
#include "HX711.h" // Include the HX711 library

// Define I2C address
LiquidCrystal_I2C lcd(0x27, 16, 2);

// Define infrared sensor pin
const int infraredPin = 2;

// RFID RC522 pins
#define RST_PIN 9    // Connects to a reset pin of Arduino
#define SS_PIN  10   // SDA - Connects to digital pin 10
#define MOSI_PIN 11  // MOSI - Connects to digital pin 11
#define MISO_PIN 12  // MISO - Connects to digital pin 12
#define SCK_PIN  13  // SCK - Connects to digital pin 13

MFRC522 mfrc522(SS_PIN, RST_PIN);  // Create MFRC522 instance

const int buzzerPin = 7; // Pin connected to the buzzer, changed to digital pin 7
bool cardDetected = false;
unsigned long cardDetectedTime = 0;
const unsigned long displayDuration = 2000; // Display duration in milliseconds (5 seconds)

// Variables to store items and their prices
String scannedItems = "";
int totalBill = 0;
int itemCount = 0;

// HX711 object declaration
const int DOUT_PIN = 4; // Data pin of HX711 connected to digital pin 4
const int SCK_PIN_LOADCELL = 3; // Clock pin of HX711 connected to digital pin 3
HX711 scale;

void setup() {
  // Initialize LCD
  lcd.init();
  lcd.clear();
  lcd.backlight();

  // Initialize RFID reader
  SPI.begin();       // Init SPI bus
  mfrc522.PCD_Init(); // Init MFRC522

  // Initialize load cell
  scale.begin(DOUT_PIN, SCK_PIN_LOADCELL);
  scale.set_scale(); // This value is obtained by calibrating the scale with known weights
  scale.tare(); // Reset the scale to 0

  // Set up infrared sensor pin
  pinMode(infraredPin, INPUT);

  // Set up buzzer pin
  pinMode(buzzerPin, OUTPUT);

  // Initialize serial communication
  Serial.begin(9600);

  // Print initial messages on LCD
  lcd.setCursor(2, 0);
  lcd.print("Hello Customer");
}

void loop() {
  // Read value from infrared sensor
  int infraredValue = digitalRead(infraredPin);

  // Check if the object is in front of the IR sensor
  if (infraredValue == HIGH && !mfrc522.PICC_IsNewCardPresent()) {
    // Beep the buzzer
    tone(buzzerPin, 3500); // Ring the buzzer
    delay(500); // Buzzer duration
    noTone(buzzerPin); // Turn off the buzzer

    // Wait for the object to be removed from the IR sensor
    while (digitalRead(infraredPin) == HIGH) {
      delay(100); // Wait for the object to be removed
    }
  }

  // Check for RFID card
  else if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial()) {
    // Card detected
    if (!cardDetected) {
      cardDetected = true;
      cardDetectedTime = millis(); // Record the time when the card is detected
      // Read the UID
      String tagUID = "";
      for (byte i = 0; i < mfrc522.uid.size; i++) {
        if (mfrc522.uid.uidByte[i] < 0x10) tagUID += "0";
        tagUID += String(mfrc522.uid.uidByte[i], HEX);
      }
      // Print UID to Serial Monitor for debugging
      Serial.print("UID: ");
      Serial.println(tagUID);
      // Print appropriate message based on UID
      lcd.clear();
      lcd.setCursor(0, 0);
      if (tagUID == "fb578a71") {
        scannedItems += "BANANA $50\n";
        totalBill += 50;
        itemCount++;
        lcd.print("BANANA $50");
      } else if (tagUID == "ba1b017a") {
        scannedItems += "ORANGE $100\n";
        totalBill += 100;
        itemCount++;
        lcd.print("ORANGE $100");
      } else if (tagUID == "abd90d71") {
        scannedItems += "Tea $10\n";
        totalBill += 10;
        itemCount++;
        lcd.print("Tea $10");
      } else if (tagUID == "05f58703") {
        scannedItems += "Sugar $30\n";
        totalBill += 30;
        itemCount++;
        lcd.print("Sugar $30");
      } else if (tagUID == "ab8ff471") {
        scannedItems += "Milk $20\n";
        totalBill += 20;
        itemCount++;
        lcd.print("Milk $20");
      } else if (tagUID == "db30c271") {
        scannedItems += "Coffee $13\n";
        totalBill += 13;
        itemCount++;
        lcd.print("Coffee $13");
      } else {
        lcd.print("Unknown Tag");
        lcd.setCursor(0, 1);
        lcd.print("Tag: ");
        lcd.print(tagUID);
      }
      // Beep the buzzer
      tone(buzzerPin, 5000); // You can adjust the frequency as needed
      delay(50); // Beep duration
    }
    // Display on Serial Monitor
    Serial.println("Card Detected");
    Serial.print("Scanned Items: ");
    Serial.println(scannedItems);
    Serial.print("Total Bill: $");
    Serial.println(totalBill);
    Serial.print("Number of Items: ");
    Serial.println(itemCount);
  } else {
    // No card detected
    if (cardDetected && millis() - cardDetectedTime >= displayDuration) {
      // If card was detected previously and it's been 5 seconds, stop the buzzer
      noTone(buzzerPin);
      cardDetected = false;
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("No. Items: ");
      lcd.print(itemCount);
      lcd.setCursor(0, 1);
      lcd.print("Bill: $");
      lcd.print(totalBill);

      // Display on Serial Monitor
      Serial.println("No Card Detected");
      Serial.print("Scanned Items: ");
      Serial.println(scannedItems);
      Serial.print("Total Bill: $");
      Serial.println(totalBill);
      Serial.print("Number of Items: ");
      Serial.println(itemCount);
    }
  }

  // Read weight from load cell
  /*float weight = scale.get_units();
  Serial.print("Weight: ");
  Serial.print(weight);
  Serial.println(" kg");

  delay(100); // Delay for better readability, adjust as needed*/
}
